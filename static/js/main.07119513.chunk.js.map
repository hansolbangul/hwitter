{"version":3,"sources":["fBase.js","routes/Profile.js","component/AuthForm.js","routes/Auth.js","component/Hweet.js","component/HweetFactory.js","routes/Home.js","component/Navigation.js","component/Router.js","component/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","dbService","firestore","authService","auth","storageService","storage","Profile","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","hweets","setHweets","useEffect","collection","orderBy","onSnapshot","snapshot","hweetArray","docs","map","doc","id","data","onSubmit","event","a","preventDefault","updateProfile","i","length","creatorId","uid","update","className","type","placeholder","onChange","value","target","autoFocus","style","marginTop","onClick","signOut","push","AuthFrom","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","e","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Hweet","hweetObj","isOwner","editing","setEditting","text","newHweet","setNewHweet","onDeleteClick","window","confirm","delete","refFromURL","attachmentUrl","toggleEditing","display","src","alt","faTrash","faPencilAlt","marginLeft","HweetFactory","hweet","setHweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","reponse","getDownloadURL","createdAt","Date","now","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","width","Navigation","justifyContent","to","marginRight","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggenIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07119513.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\n// const firebaseConfig = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n//     appId: process.env.REACT_APP_APP_ID,\n// };\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyAE0AUjEcCUUtt5GpLacqFN_Y1L_X9Ky1k',\n    authDomain: 'hwitter-e2706.firebaseapp.com',\n    projectId: 'hwitter-e2706',\n    storageBucket: 'hwitter-e2706.appspot.com',\n    messagingSenderId: '697633742495',\n    appId: '1:697633742495:web:5ddb0cb137fec1f0764caa',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const dbService = firebase.firestore();\n\nexport const authService = firebase.auth();\n\nexport const storageService = firebase.storage();\n","import { authService, dbService } from 'fBase';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nconst Profile = ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const [hweets, setHweets] = useState({});\n\n    //사용자 이름 변경시 트윗에도 이름 변경\n    useEffect(() => {\n        dbService\n            .collection('hweets')\n            .orderBy('createdAt', 'desc')\n            .onSnapshot((snapshot) => {\n                const hweetArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                setHweets(hweetArray);\n            });\n    }, []);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/'); // Redirect와 똑같이 메인으로 돌아가기 위해 사용하는 것 react-router-dom 의 Hook\n    };\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    // const getMyHweet = async () => {\n    //     const hweets = await dbService\n    //         .collection('hweets')\n    //         .where('creatorId', '==', userObj.uid)\n    //         .orderBy('createdAt', 'desc')\n    //         .get();\n    //     console.log(hweets.docs.map((doc) => doc.data()));\n    // };\n    // useEffect(() => {\n    //     getMyHweet();\n    // }, []); 이렇게 sql을 where을 써서 엮을 수 있음.\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            for (let i = 0; i < hweets.length; i++) {\n                if (hweets[i].creatorId === userObj.uid)\n                    await dbService.doc(`hweets/${hweets[i].id}`).update({\n                        displayName: newDisplayName,\n                    });\n            }\n\n            refreshUser();\n        }\n    };\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Display name\"\n                    onChange={onChange}\n                    autoFocus\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\nexport default Profile;\n","import { authService } from 'fBase';\nimport React, { useState } from 'react';\n\nconst AuthFrom = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState('');\n    const onChange = (e) => {\n        const {\n            target: { name, value },\n        } = e;\n        if (name === 'email') {\n            setEmail(value);\n        } else if (name === 'password') {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            // console.log(error);\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccount ? 'Creacte Account' : 'Sign In'}\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? 'Sign In' : 'Create Account'}\n            </span>{' '}\n        </>\n    );\n};\n\nexport default AuthFrom;\n","import { authService, firebaseInstance } from '../fBase';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport AuthFrom from 'component/AuthForm';\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === 'google') {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === 'github') {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={'#04AAFF'}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthFrom />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;\n","import { dbService, storageService } from 'fBase';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Hweet = ({ hweetObj, isOwner }) => {\n    const [editing, setEditting] = useState(false);\n    const [newHweet, setNewHweet] = useState(hweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm('Are you sure you want to delete this Hweet?');\n        if (ok) {\n            await dbService.doc(`hweets/${hweetObj.id}`).delete();\n            await storageService.refFromURL(hweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditting((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`hweets/${hweetObj.id}`).update({\n            text: newHweet,\n        });\n        setEditting(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewHweet(value);\n    };\n    return (\n        <div style={{ display: 'flex' }}>\n            <div className=\"nweet\">\n                {editing ? (\n                    <>\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Edit your hweet\"\n                                value={newHweet}\n                                onChange={onChange}\n                                required\n                                autoFocus\n                                className=\"formInput\"\n                            />\n                            <input type=\"submit\" className=\"formBtn\" value=\"Update Hweet\" />\n                        </form>\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                            Cancel\n                        </span>\n                    </>\n                ) : (\n                    <>\n                        <h4>{hweetObj.text}</h4>\n                        {hweetObj.attachmentUrl && <img src={hweetObj.attachmentUrl} alt=\"img\" />}\n                        {isOwner && (\n                            <div className=\"nweet__actions\">\n                                <span onClick={onDeleteClick}>\n                                    <FontAwesomeIcon icon={faTrash} />\n                                </span>\n                                <span onClick={toggleEditing}>\n                                    <FontAwesomeIcon icon={faPencilAlt} />\n                                </span>\n                            </div>\n                        )}\n                    </>\n                )}\n            </div>\n            <div>\n                {hweetObj.displayName ? (\n                    <h3 style={{ marginTop: '20px', marginLeft: '10px' }}>\n                        {hweetObj.displayName}\n                    </h3>\n                ) : (\n                    <h3 style={{ marginTop: '20px', marginLeft: '10px' }}>No Name</h3>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Hweet;\n","import { dbService, storageService } from 'fBase';\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst HweetFactory = ({ userObj }) => {\n    const [hweet, setHweet] = useState('');\n    const [attachment, setAttachment] = useState('');\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setHweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onSubmit = async (event) => {\n        if (hweet === '') {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = '';\n        if (attachment !== '') {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const reponse = await attachmentRef.putString(attachment, 'data_url');\n            attachmentUrl = await reponse.ref.getDownloadURL(); // 이미지의 다운로드 Url\n        }\n\n        const hweetObj = {\n            text: hweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            displayName: userObj.displayName,\n            attachmentUrl,\n        };\n        await dbService.collection('hweets').add(hweetObj);\n        setHweet('');\n        setAttachment('');\n    };\n    const onClearAttachment = () => setAttachment('');\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={hweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                        alt=\"img\"\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default HweetFactory;\n","import Hweet from 'component/Hweet';\nimport HweetFactory from 'component/HweetFactory';\nimport { dbService } from 'fBase';\nimport React, { useEffect, useState } from 'react';\n\nconst Home = ({ userObj }) => {\n    const [hweets, setHweets] = useState([]);\n    useEffect(() => {\n        dbService\n            .collection('hweets')\n            .orderBy('createdAt', 'desc')\n            .onSnapshot((snapshot) => {\n                const hweetArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                setHweets(hweetArray);\n            });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <HweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30, width: '100%' }}>\n                {hweets.map((hweet) => (\n                    <Hweet\n                        key={hweet.id}\n                        hweetObj={hweet}\n                        isOwner={hweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n                </Link>\n                <li>\n                    <Link\n                        to=\"/profile\"\n                        style={{\n                            marginLeft: 10,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            fontSize: 12,\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n                        <span style={{ marginTop: 10 }}>\n                            {userObj.displayName ? `${userObj.displayName}의 Profile` : 'Profile'}\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Profile from 'routes/Profile';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggenIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggenIn && <Navigation userObj={userObj} />}\n            <Switch>\n                <>\n                    {isLoggenIn ? (\n                        <div\n                            style={{\n                                maxWidth: 890,\n                                width: '100%',\n                                margin: '0 auto',\n                                marginTop: 80,\n                                display: 'flex',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <Route exact path=\"/\">\n                                <Home userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/profile\">\n                                <Profile userObj={userObj} refreshUser={refreshUser} />\n                            </Route>\n                            {/* <Redirect from=\"*\" to=\"/\" /> // 리다이랙션을 사용하여 로그아웃시 메인으로 이동  */}\n                        </div>\n                    ) : (\n                        <>\n                            <Route exact path=\"/\">\n                                <Auth />\n                            </Route>\n                            {/* <Redirect from=\"*\" to=\"/\" /> */}\n                        </>\n                    )}\n                </>\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport { authService, dbService } from '../fBase';\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            // 로그인이나 로그아웃할때 나타남, 혹은 어플리케이션이 초기화 될 때 발생한다.\n            if (user) {\n                // setUserObj(user);\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n\n    // console.log(userObj);\n    // console.log(Boolean(userObj));\n\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggenIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                'Initializing...'\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport './styles.css';\n\nimport { authService } from './fBase';\n\nconsole.log(authService);\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}